---

- name: check if rules file exists
  stat:
    path: /var/lib/icinga2/certs/ticket
  register: icinga2_client_register_ticket_generated

- name: get ticket from master
  uri:
    url: '{{ icinga2_client_api_url }}/v1/actions/generate-ticket'
    method: POST
    user: '{{ icinga2_client_api_user }}'
    password: '{{ icinga2_client_api_pass }}'
    body: '{ "cn": "{{ inventory_hostname }}"}'
    force_basic_auth: yes
    status_code: 200
    body_format: 'json'
    headers:
      Accept: 'application/json'
    validate_certs: no
  register: icinga2_client_register_ticket
  when: not icinga2_client_register_ticket_generated.stat.exists

# - name: ticket and fqdn
#   debug:
#     msg: "{{ icinga2_client_register_ticket.json.results.0.ticket }}: is for {{ inventory_hostname }}"

- name: get ca from icinga2 masters
  command: |
    icinga2 pki save-cert --host {{ icinga2_client_monitoring_parents[0] }} \
    --trustedcert /var/lib/icinga2/certs/icinga2_master_ca.crt
  args:
    creates: /var/lib/icinga2/certs/icinga2_master_ca.crt

- name: setup node and get certificates signed
  command: |
    icinga2 node setup \
    --zone {{ inventory_hostname }} \
    --cn {{ inventory_hostname }} \
    --endpoint {{ icinga2_client_monitoring_parents[0] }} \
    --parent_host {{ icinga2_client_monitoring_parents[0] }} \
    --parent_zone {{ icinga2_client_parent_zone }} \
    --ticket {{ icinga2_client_register_ticket.json.results.0.ticket }} \
    --trustedcert /var/lib/icinga2/certs/icinga2_master_ca.crt \
    --accept-config --accept-commands
  args:
    creates: /var/lib/icinga2/certs/ca.crt
  when: not icinga2_client_register_ticket_generated.stat.exists
